{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todoWithUser","id","title","completed","classNames","TodoList","todosWithUser","todos","map","username","userId","App","todosFromServer","todo","usersFromServer","find","useState","visibleTodos","setVisibleTodos","setTitle","titleTouched","setTitleTouched","hasTitleError","selectedUser","setSelectedUser","userTouched","setUserTouched","hasUserError","onSubmit","event","preventDefault","trim","arrOfSomething","newTodo","Math","max","type","onChange","target","value","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5bac186.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TodoWithUser } from '../../types/TodoWithUser';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todoWithUser: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todoWithUser }) => {\n  const {\n    id, title, completed, user,\n  } = todoWithUser;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos: todosWithUser }) => {\n  return (\n    <section className=\"TodoList\">\n      {todosWithUser\n        .map(todoWithUser => (\n          <TodoInfo todoWithUser={todoWithUser} key={todoWithUser.id} />\n        ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoWithUser } from './types/TodoWithUser';\nimport { User } from './types/User';\n\nexport const App = () => {\n  const todosWithUser = todosFromServer.map(todo => ({\n    ...todo,\n    user: usersFromServer.find(user => (user.id === todo.userId)) as User,\n  }));\n\n  const [visibleTodos, setVisibleTodos] = useState(todosWithUser);\n\n  const [title, setTitle] = useState('');\n  const [titleTouched, setTitleTouched] = useState(false);\n  const hasTitleError = titleTouched && !title;\n\n  const [selectedUser, setSelectedUser] = useState('0');\n  const [userTouched, setUserTouched] = useState(false);\n  const hasUserError = userTouched && selectedUser === '0';\n\n  const clear = () => {\n    setTitle('');\n    setSelectedUser('0');\n    setTitleTouched(false);\n    setUserTouched(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitle(title.trim());\n\n    if (!title.trim() || selectedUser === '0') {\n      setTitleTouched(true);\n      setUserTouched(true);\n\n      return;\n    }\n\n    function giveMaxId(arrOfSomething: TodoWithUser[]) {\n      const maxId = Math.max(...arrOfSomething.map(todo => todo.id)) + 1;\n\n      return maxId;\n    }\n\n    const newTodo: TodoWithUser = {\n      id: giveMaxId(visibleTodos),\n      title,\n      completed: false,\n      user: usersFromServer.find(user => (user.id === +selectedUser)) as User,\n      userId: +selectedUser,\n    };\n\n    setVisibleTodos([\n      ...visibleTodos,\n      newTodo,\n    ]);\n\n    clear();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            onChange={event => setTitle(event.target.value)}\n            placeholder=\"Enter a title\"\n            value={title}\n          />\n          {!hasTitleError\n            || <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            onChange={event => setSelectedUser(event.target.value)}\n            value={selectedUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {!hasUserError || <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}