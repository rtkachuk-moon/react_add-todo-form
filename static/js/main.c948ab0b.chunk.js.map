{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todoWithUser","id","title","completed","classNames","TodoList","todosWithUser","map","username","userId","App","todosFromServer","todo","usersFromServer","find","useState","visibleTodos","setVisibleTodos","setTitle","titleTouched","setTitleTouched","hasTitleError","setUser","userTouched","setUserTouched","hasUserError","action","method","onSubmit","e","preventDefault","newTodo","Math","max","u","type","onChange","target","value","onBlur","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c948ab0b.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TodoWithUser } from '../../types/TodoWithUser';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todoWithUser: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todoWithUser }) => {\n  const {\n    id, title, completed, user,\n  } = todoWithUser;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ntype Props = {\n  todosWithUser: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todosWithUser }) => {\n  return (\n    <section className=\"TodoList\">\n      {todosWithUser\n        // eslint-disable-next-line max-len\n        .map(todoWithUser => <TodoInfo todoWithUser={todoWithUser} key={todoWithUser.id} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoWithUser } from './types/TodoWithUser';\nimport { User } from './types/User';\n\nexport const App = () => {\n  const todosWithUser = todosFromServer.map(todo => ({\n    ...todo,\n    user: usersFromServer.find(user => (user.id === todo.userId)) as User,\n  }));\n\n  const [visibleTodos, setVisibleTodos] = useState(todosWithUser);\n\n  const [title, setTitle] = useState('');\n  const [titleTouched, setTitleTouched] = useState(false);\n  const hasTitleError = titleTouched && !title;\n\n  const [user, setUser] = useState('0');\n  const [userTouched, setUserTouched] = useState(false);\n  const hasUserError = userTouched && user === '0';\n\n  const clear = () => {\n    setTitle('');\n    setUser('0');\n    setTitleTouched(false);\n    setUserTouched(false);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!title || user === '0') {\n      setTitleTouched(true);\n      setUserTouched(true);\n\n      return;\n    }\n\n    const newTodo: TodoWithUser = {\n      id: Math.max(...visibleTodos.map(todo => todo.id)) + 1,\n      title,\n      completed: false,\n      user: usersFromServer.find(u => (u.id === +user)) as User,\n      userId: +user,\n    };\n\n    setVisibleTodos([\n      ...visibleTodos,\n      newTodo,\n    ]);\n\n    clear();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            onChange={e => setTitle(e.target.value)}\n            onBlur={() => setTitleTouched(true)}\n            placeholder=\"Enter a title\"\n            value={title}\n          />\n          {!hasTitleError\n            || <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            onChange={e => setUser(e.target.value)}\n            value={user}\n            onBlur={() => setUserTouched(true)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(u => (\n              <option value={u.id}>{u.name}</option>\n            ))}\n          </select>\n\n          {!hasUserError || <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todosWithUser={visibleTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}